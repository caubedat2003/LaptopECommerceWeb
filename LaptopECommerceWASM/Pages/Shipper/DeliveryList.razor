@page "/DeliveryList/{userId}"
@using LaptopECommerce.Models
@using LaptopECommerce.Models.Enum
@using LaptopECommerceWASM.Services
@using LaptopECommerceWASM.Components
@inject IConfiguration Configuration
@inject IOrderService OrderService
@inject IUserService UserApiClient

<h4 class="fw-bold mt-2">Các đơn hàng được giao cho bạn</h4>
@if (Orders == null || !Orders.Any() || User.Role != "Shipper")
{
    <div class="alert alert-info mt-3">
        Không có đơn hàng nào được giao cho bạn.
    </div>
}
else
{
    @foreach (var order in Orders)
    {
        <div class="card mb-3 shadow-sm">
            <div class="card-body">
                <div class="row">
                    <h5 class="fw-bold mb-2">ID đơn hàng: @order.OrderId</h5>
                    <div class="col-sm-5">
                        <!-- Hiển thị danh sách laptop -->
                        @foreach (var item in order.OrderLaptops)
                        {
                            <div class="row mb-1">
                                <div class="col-sm-2">
                                    <img src="/image/@item.Laptop.ImageURL" class="img-thumbnail" alt="@item.Laptop.Name" style="height:50px; object-fit:contain;" />
                                </div>
                                <div class="col-sm-10">
                                    <p class="">@item.Laptop.Name (x @item.Quantity)</p>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Phương thức thanh toán -->
                    <div class="col-sm-1">
                        <p>Thanh toán: @order.PaymentMethod</p>
                    </div>

                    <!-- Tên người mua -->
                    <div class="col-sm-2">
                        <p>Người mua: @CustomerNames[order.CustomerId]</p>
                    </div>

                    <!-- Tên Shipper -->
                    <div class="col-sm-1">
                        <a>
                            Người giao: @(order.ShipperId.HasValue && ShipperNames.ContainsKey(order.ShipperId.Value)
                    ? ShipperNames[order.ShipperId.Value]
                    : "N/A")
                        </a>
                    </div>

                    <!-- Ngày mua đơn hàng -->
                    <div class="col-sm-1">
                        <p>Ngày mua: @order.OrderDate.ToString(Configuration["DateTimeFormat"])</p>
                    </div>

                    <!-- Tổng giá trị đơn hàng -->
                    <div class="col-sm-1">
                        <p class="fw-bold text-primary">Tổng giá: @CurrencyHelper.FormatCurrency(order.TotalAmount)</p>
                    </div>

                    <!-- Trạng thái đơn hàng -->
                    <div class="col-sm-1">
                        <a>
                            <StatusBadge Status="order.Status"></StatusBadge>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public string UserId { get; set; }

    private UserDto User;
    private List<OrderResponse> Orders;
    private Dictionary<Guid, string> CustomerNames = new();
    private Dictionary<Guid, string> ShipperNames = new();

    protected async override Task OnInitializedAsync()
    {
        User = await UserApiClient.GetUserDetail(Guid.Parse(UserId));

        Orders = await OrderService.GetDelivery(Guid.Parse(UserId));
        foreach (var order in Orders)
        {
            if (!CustomerNames.ContainsKey(order.CustomerId))
            {
                var customer = await UserApiClient.GetUserDetail(order.CustomerId);
                CustomerNames[order.CustomerId] = $"{customer.LastName} {customer.FirstName}";
            }
            if (order.ShipperId.HasValue && !ShipperNames.ContainsKey(order.ShipperId.Value))
            {
                var shipper = await UserApiClient.GetUserDetail(order.ShipperId.Value);
                ShipperNames[order.ShipperId.Value] = $"{shipper.LastName} {shipper.FirstName}";
            }
        }
    }
}
