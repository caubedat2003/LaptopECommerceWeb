@page "/Cart"
@using LaptopECommerce.Models
@using LaptopECommerceWASM.Components
@using LaptopECommerceWASM.Services
@inject CartService CartService
@inject NavigationManager navigationManager

<div class="row">
    <div class="col-sm-1"></div>

    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-8">
                <div class="card shadow-lg">
                    <div class="card-body">
                        <h3 class="fw-bold">Giỏ hàng của bạn</h3>
                        @if (CartService.GetCartItems().Count == 0)
                        {
                            <p class="text-danger">Giỏ hàng của bạn đang trống.</p>
                        }
                        else
                        {
                            @foreach (var item in CartService.GetCartItems())
                            {
                                <div class="card mt-2">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-sm-2">
                                                <img src="/image/@item.ImageURL" width="100" height="100" />
                                            </div>
                                            <div class="col-sm-5 fw-bold alignMiddle">
                                                @item.Name
                                            </div>
                                            <div class="col-sm-2 alignMiddle">
                                                @item.Price.ToString("N0")đ
                                            </div>
                                            <div class="col-sm-2 alignMiddle">
                                                <input type="number" class="form-control" style="width: 70px;" min="1" value="@item.Quantity"
                                                       @onchange="@(e => UpdateQuantity(item.LaptopId, int.Parse(e.Value.ToString())))" />
                                            </div>
                                            <div class="col-sm-1">
                                                <button class="btn btn-danger red-btn-circle" @onclick="() => RemoveFromCart(item.LaptopId)">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="card shadow-lg">
                    <div class="card-body">
                        <h3 class="fw-bold">Thông tin đơn hàng</h3>
                        <h5 class="text-danger fw-bold">Tổng tiền: @CurrencyHelper.FormatCurrency(CartService.GetTotalAmount())</h5>
                        <hr />
                        <p>Phí vận chuyển sẽ được tính ở trang thanh toán.</p>
                        <p>Bạn cũng có thể nhập mã giảm giá ở trang thanh toán.</p>
                        <p>Vui lòng quay video khi mở sản phẩm</p>
                        <p>Vui lòng đọc kĩ chính sách mua hàng ở trang liên hệ trước khi quyết định thanh toán.</p>

                        <button class="btn btn-primary light-green-btn" @onclick="Checkout">
                            <i class="fa fa-credit-card me-2"></i>
                            THANH TOÁN
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-1"></div>
</div>

@code {
    private void RemoveFromCart(Guid laptopId)
    {
        CartService.RemoveFromCart(laptopId);
    }

    private void UpdateQuantity(Guid laptopId, int quantity)
    {
        var item = CartService.GetCartItems().FirstOrDefault(x => x.LaptopId == laptopId);
        if (item != null)
        {
            item.Quantity = quantity > 0 ? quantity : 1;
        }
    }

    private void Checkout()
    {
        navigationManager.NavigateTo("/Checkout");
    }
}
