@page "/ChangePassword/{userId}"
@using LaptopECommerce.Models
@using LaptopECommerceWASM.Services
@inject IAuthService AuthService
@inject IToastService toastService
@inject NavigationManager navigationManager

@if (ShowErrors)
{
    <div class="alert alert-danger">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}
<div class="page-body-center">
    <div class="registerCard">
        <div class="title-register">
            <h3 class="m-2"><i class="ri-key-2-fill"></i></h3>
            <h3 class="m-2">Đổi mật khẩu</h3>
        </div>
        <hr class="m-3" />
        <EditForm Model="PassModel" OnValidSubmit="HandleChangePassword">
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <div class="card-body">
                <div class="row mb-3 justify-content-center">
                    <div class="col-sm-10">
                        <label for="password">Mật khẩu cũ</label>
                        <div class="input-group">
                            <span class="input-group-text" id="oldpass">
                                <i class="ri-lock-unlock-fill"></i>
                            </span>
                            <input type="password" id="oldpass" class="form-control" @ref="passwordInput"
                                   aria-describedby="oldpass" placeholder="Mật khẩu cũ" @bind-value="PassModel.OldPassword" />
                        </div>
                        <div class="valid-message">
                            <ValidationMessage For="()=> PassModel.OldPassword"></ValidationMessage>
                        </div>
                    </div>
                </div>
                <div class="row mb-3 justify-content-center">
                    <div class="col-sm-10">
                        <label for="password">Mật khẩu mới</label>
                        <div class="input-group">
                            <span class="input-group-text" id="newpass">
                                <i class="ri-lock-2-fill"></i>
                            </span>
                            <input type="password" id="newpass" class="form-control" @ref="passwordInput"
                                   aria-describedby="newpass" placeholder="Mật khẩu mới" @bind-value="PassModel.NewPassword" />
                        </div>
                        <div class="valid-message">
                            <ValidationMessage For="()=> PassModel.NewPassword"></ValidationMessage>
                        </div>
                    </div>
                </div>
                <div class="row mb-3 justify-content-center">
                    <div class="col-sm-10">
                        <label for="password">Nhập lại mật khẩu mới</label>
                        <div class="input-group">
                            <span class="input-group-text" id="confirmpass">
                                <i class="ri-shield-user-fill"></i>
                            </span>
                            <input type="password" id="confirmpass" class="form-control" @ref="passwordInput"
                                   aria-describedby="confirmpass" placeholder="Mật khẩu" @bind-value="PassModel.ConfirmNewPassword" />
                        </div>
                        <div class="valid-message">
                            <ValidationMessage For="()=> PassModel.ConfirmNewPassword"></ValidationMessage>
                        </div>
                    </div>
                </div>
            </div>
            <div class="button-center mb-3">
                <button type="submit" class="btn register-btn">Lưu mật khẩu</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public string userId { get; set; }

    private ChangePasswordRequest PassModel = new ChangePasswordRequest();
    private bool ShowErrors;
    private List<string> Errors = new List<string>();
    private ElementReference passwordInput;
    private bool isPasswordVisible = false;

    public async Task HandleChangePassword()
    {
        ShowErrors = false;
        Errors.Clear();
        var result = await AuthService.ChangePassword(Guid.Parse(userId), PassModel);
        if (result.Successful)
        {
            navigationManager.NavigateTo($"/Profile/{userId}");
            toastService.ShowSuccess("Cập nhật mật khẩu thành công!");
        }
        else
        {
            ShowErrors = true;
            Errors = result.Errors.ToList();
            toastService.ShowError("Đăng kí không thành công!");
        }
    }
}
