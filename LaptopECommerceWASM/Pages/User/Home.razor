@page "/"
@using LaptopECommerceWASM.Services
@using LaptopECommerce.Models
@using LaptopECommerceWASM.Components
@inject ILaptopService LaptopService
@inject CartService CartService
@inject IToastService toastService

<div class="banner-home">
</div>

<div class="row">
        <div class="col-sm-2">
        </div>
        <div class="col-sm-8">
            @* Laptop list loaded here *@
            @if (Laptops == null)
            {
                <LoadingIndicator />
            }
            else if (Laptops.Count == 0)
            {
                <p>Hiện không có sản phẩm !</p>
            }
            else
            {
                <h2 class="fw-bold mb-3">Các sản phẩm hot</h2>
                @foreach (var laptop in Laptops.Chunk(4))
                {
                    <div class="row mb-4">
                        @foreach (var item in laptop)
                        {
                            <div class="col-sm-3">
                                <div class="card shadow-sm h-100 pad-1">
                                    <img src="/image/@item.ImageURL" alt="@item.Name" class="card-img-top" style="height:200px; object-fit:cover;" />
                                    <div class="card-body d-flex flex-column">
                                        <a href="/Product/@item.LaptopId"  class="card-title text-center fs-5"
                                            style="text-decoration:none; color:black">@item.Brand</a>
                                        <a href="/Product/@item.LaptopId" class="card-text text-center text-truncate"
                                            title="@item.Name" style="text-decoration:none; color:black">@item.Name</a>
                                        <p class="card-text text-center text-danger fw-bold mt-1">
                                            @CurrencyHelper.FormatCurrency(item.Price)
                                        </p>
                                        <div class="fw-bold">
                                        <button class="btn btn-primary cart-btn" @onclick="() => AddToCart(item)">
                                                <i class="ri-shopping-cart-line"></i>
                                            </button>
                                            Thêm vào giỏ
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        </div>
        <div class="col-sm-2">
        </div>
    </div>


@code{
    private List<LaptopRequest> Laptops;
    private LaptopRequest Laptop { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Laptops = await LaptopService.GetLaptops();
    }

    private void AddToCart(LaptopRequest laptop)
    {
        if (laptop == null)
        {
            toastService.ShowError("Không thể thêm sản phẩm vào giỏ hàng!");
            return;
        }
        CartService.AddToCart(new CartItem
            {
                LaptopId = laptop.LaptopId,
                Name = laptop.Name,
                Price = laptop.Price,
                ImageURL = laptop.ImageURL,
                Quantity = 1
            });
        toastService.ShowInfo($"Sản phẩm {laptop.Name} đã thêm vào giỏ hàng.");
    }
}